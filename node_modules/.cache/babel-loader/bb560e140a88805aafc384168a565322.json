{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyFile\\\\Project\\\\shop-via\\\\src\\\\components\\\\admin\\\\partials\\\\dashboard\\\\DashboardCard05.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Info from '../../utils/Info';\nimport RealtimeChart from '../../charts/RealtimeChart';\n\n// Import utilities\nimport { tailwindConfig, hexToRGB } from '../../utils/Utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DashboardCard05() {\n  _s();\n  // IMPORTANT:\n  // Code below is for demo purpose only, and it's not covered by support.\n  // If you need to replace dummy data with real data,\n  // refer to Chart.js documentation: https://www.chartjs.org/docs/latest\n\n  // Fake real-time data\n  const [counter, setCounter] = useState(0);\n  const [increment, setIncrement] = useState(0);\n  const [range, setRange] = useState(35);\n\n  // Dummy data to be looped\n  const data = [57.81, 57.75, 55.48, 54.28, 53.14, 52.25, 51.04, 52.49, 55.49, 56.87, 53.73, 56.42, 58.06, 55.62, 58.16, 55.22, 58.67, 60.18, 61.31, 63.25, 65.91, 64.44, 65.97, 62.27, 60.96, 59.34, 55.07, 59.85, 53.79, 51.92, 50.95, 49.65, 48.09, 49.81, 47.85, 49.52, 50.21, 52.22, 54.42, 53.42, 50.91, 58.52, 53.37, 57.58, 59.09, 59.36, 58.71, 59.42, 55.93, 57.71, 50.62, 56.28, 57.37, 53.08, 55.94, 55.82, 53.94, 52.65, 50.25];\n  const [slicedData, setSlicedData] = useState(data.slice(0, range));\n\n  // Generate fake dates from now to back in time\n  const generateDates = () => {\n    const now = new Date();\n    const dates = [];\n    data.forEach((v, i) => {\n      dates.push(new Date(now - 2000 - i * 2000));\n    });\n    return dates;\n  };\n  const [slicedLabels, setSlicedLabels] = useState(generateDates().slice(0, range).reverse());\n\n  // Fake update every 2 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCounter(counter + 1);\n    }, 2000);\n    return () => clearInterval(interval);\n  }, [counter]);\n\n  // Loop through data array and update\n  useEffect(() => {\n    setIncrement(increment + 1);\n    if (increment + range < data.length) {\n      setSlicedData(_ref => {\n        let [x, ...slicedData] = _ref;\n        return [...slicedData, data[increment + range]];\n      });\n    } else {\n      setIncrement(0);\n      setRange(0);\n    }\n    setSlicedLabels(_ref2 => {\n      let [x, ...slicedLabels] = _ref2;\n      return [...slicedLabels, new Date()];\n    });\n    return () => setIncrement(0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [counter]);\n  const chartData = {\n    labels: slicedLabels,\n    datasets: [\n    // Indigo line\n    {\n      data: slicedData,\n      fill: true,\n      backgroundColor: `rgba(${hexToRGB(tailwindConfig().theme.colors.blue[500])}, 0.08)`,\n      borderColor: tailwindConfig().theme.colors.indigo[500],\n      borderWidth: 2,\n      tension: 0,\n      pointRadius: 0,\n      pointHoverRadius: 3,\n      pointBackgroundColor: tailwindConfig().theme.colors.indigo[500],\n      clip: 20\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col col-span-full sm:col-span-6 bg-white shadow-lg rounded-sm border border-slate-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"px-5 py-4 border-b border-slate-100 flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-semibold text-slate-800\",\n        children: \"Real Time Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Info, {\n        className: \"ml-2\",\n        containerClassName: \"min-w-44\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-center\",\n          children: [\"Built with \", /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"underline\",\n            href: \"https://www.chartjs.org/\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"Chart.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 59\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RealtimeChart, {\n      data: chartData,\n      width: 595,\n      height: 248\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardCard05, \"NGYDoY5aS9I3Q6vfqlv+XzG/Zgw=\");\n_c = DashboardCard05;\nexport default DashboardCard05;\nvar _c;\n$RefreshReg$(_c, \"DashboardCard05\");","map":{"version":3,"names":["React","useState","useEffect","Info","RealtimeChart","tailwindConfig","hexToRGB","DashboardCard05","counter","setCounter","increment","setIncrement","range","setRange","data","slicedData","setSlicedData","slice","generateDates","now","Date","dates","forEach","v","i","push","slicedLabels","setSlicedLabels","reverse","interval","setInterval","clearInterval","length","x","chartData","labels","datasets","fill","backgroundColor","theme","colors","blue","borderColor","indigo","borderWidth","tension","pointRadius","pointHoverRadius","pointBackgroundColor","clip"],"sources":["D:/MyFile/Project/shop-via/src/components/admin/partials/dashboard/DashboardCard05.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Info from '../../utils/Info';\nimport RealtimeChart from '../../charts/RealtimeChart';\n\n// Import utilities\nimport { tailwindConfig, hexToRGB } from '../../utils/Utils';\n\nfunction DashboardCard05() {\n\n  // IMPORTANT:\n  // Code below is for demo purpose only, and it's not covered by support.\n  // If you need to replace dummy data with real data,\n  // refer to Chart.js documentation: https://www.chartjs.org/docs/latest\n\n  // Fake real-time data\n  const [counter, setCounter] = useState(0);\n  const [increment, setIncrement] = useState(0);\n  const [range, setRange] = useState(35);\n  \n  // Dummy data to be looped\n  const data = [\n    57.81, 57.75, 55.48, 54.28, 53.14, 52.25, 51.04, 52.49, 55.49, 56.87,\n    53.73, 56.42, 58.06, 55.62, 58.16, 55.22, 58.67, 60.18, 61.31, 63.25,\n    65.91, 64.44, 65.97, 62.27, 60.96, 59.34, 55.07, 59.85, 53.79, 51.92,\n    50.95, 49.65, 48.09, 49.81, 47.85, 49.52, 50.21, 52.22, 54.42, 53.42,\n    50.91, 58.52, 53.37, 57.58, 59.09, 59.36, 58.71, 59.42, 55.93, 57.71,\n    50.62, 56.28, 57.37, 53.08, 55.94, 55.82, 53.94, 52.65, 50.25,\n  ];\n\n  const [slicedData, setSlicedData] = useState(data.slice(0, range));\n\n  // Generate fake dates from now to back in time\n  const generateDates = () => {\n    const now = new Date();\n    const dates = [];\n    data.forEach((v, i) => {\n      dates.push(new Date(now - 2000 - i * 2000));\n    });\n    return dates;\n  };\n\n  const [slicedLabels, setSlicedLabels] = useState(generateDates().slice(0, range).reverse());\n\n  // Fake update every 2 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCounter(counter + 1);\n    }, 2000);\n    return () => clearInterval(interval)\n  }, [counter]);\n\n  // Loop through data array and update\n  useEffect(() => {\n    setIncrement(increment + 1);\n    if (increment + range < data.length) {\n      setSlicedData(([x, ...slicedData]) => [...slicedData, data[increment + range]]);\n    } else {\n      setIncrement(0);\n      setRange(0);\n    }\n    setSlicedLabels(([x, ...slicedLabels]) => [...slicedLabels, new Date()]);\n    return () => setIncrement(0)\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [counter]);\n\n  const chartData = {\n    labels: slicedLabels,\n    datasets: [\n      // Indigo line\n      {\n        data: slicedData,\n        fill: true,\n        backgroundColor: `rgba(${hexToRGB(tailwindConfig().theme.colors.blue[500])}, 0.08)`,\n        borderColor: tailwindConfig().theme.colors.indigo[500],\n        borderWidth: 2,\n        tension: 0,\n        pointRadius: 0,\n        pointHoverRadius: 3,\n        pointBackgroundColor: tailwindConfig().theme.colors.indigo[500],\n        clip: 20,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"flex flex-col col-span-full sm:col-span-6 bg-white shadow-lg rounded-sm border border-slate-200\">\n      <header className=\"px-5 py-4 border-b border-slate-100 flex items-center\">\n        <h2 className=\"font-semibold text-slate-800\">Real Time Value</h2>\n        <Info className=\"ml-2\" containerClassName=\"min-w-44\">\n          <div className=\"text-sm text-center\">Built with <a className=\"underline\" href=\"https://www.chartjs.org/\" target=\"_blank\" rel=\"noreferrer\">Chart.js</a></div>\n        </Info>\n      </header>\n      {/* Chart built with Chart.js 3 */}\n      {/* Change the height attribute to adjust the chart height */}\n      <RealtimeChart data={chartData} width={595} height={248} />\n    </div>\n  );\n}\n\nexport default DashboardCard05;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}