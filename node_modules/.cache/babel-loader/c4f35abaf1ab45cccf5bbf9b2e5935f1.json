{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _parser = _interopRequireDefault(require(\"./parser\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nvar Processor = /*#__PURE__*/function () {\n  function Processor(func, options) {\n    this.func = func || function noop() {};\n    this.funcRes = null;\n    this.options = options;\n  }\n  var _proto = Processor.prototype;\n  _proto._shouldUpdateSelector = function _shouldUpdateSelector(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var merged = Object.assign({}, this.options, options);\n    if (merged.updateSelector === false) {\n      return false;\n    } else {\n      return typeof rule !== \"string\";\n    }\n  };\n  _proto._isLossy = function _isLossy(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var merged = Object.assign({}, this.options, options);\n    if (merged.lossless === false) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  _proto._root = function _root(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var parser = new _parser[\"default\"](rule, this._parseOptions(options));\n    return parser.root;\n  };\n  _proto._parseOptions = function _parseOptions(options) {\n    return {\n      lossy: this._isLossy(options)\n    };\n  };\n  _proto._run = function _run(rule, options) {\n    var _this = this;\n    if (options === void 0) {\n      options = {};\n    }\n    return new Promise(function (resolve, reject) {\n      try {\n        var root = _this._root(rule, options);\n        Promise.resolve(_this.func(root)).then(function (transform) {\n          var string = undefined;\n          if (_this._shouldUpdateSelector(rule, options)) {\n            string = root.toString();\n            rule.selector = string;\n          }\n          return {\n            transform: transform,\n            root: root,\n            string: string\n          };\n        }).then(resolve, reject);\n      } catch (e) {\n        reject(e);\n        return;\n      }\n    });\n  };\n  _proto._runSync = function _runSync(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var root = this._root(rule, options);\n    var transform = this.func(root);\n    if (transform && typeof transform.then === \"function\") {\n      throw new Error(\"Selector processor returned a promise to a synchronous call.\");\n    }\n    var string = undefined;\n    if (options.updateSelector && typeof rule !== \"string\") {\n      string = root.toString();\n      rule.selector = string;\n    }\n    return {\n      transform: transform,\n      root: root,\n      string: string\n    };\n  }\n  /**\n   * Process rule into a selector AST.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {Promise<parser.Root>} The AST of the selector after processing it.\n   */;\n\n  _proto.ast = function ast(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.root;\n    });\n  }\n  /**\n   * Process rule into a selector AST synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {parser.Root} The AST of the selector after processing it.\n   */;\n\n  _proto.astSync = function astSync(rule, options) {\n    return this._runSync(rule, options).root;\n  }\n  /**\n   * Process a selector into a transformed value asynchronously\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {Promise<any>} The value returned by the processor.\n   */;\n\n  _proto.transform = function transform(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.transform;\n    });\n  }\n  /**\n   * Process a selector into a transformed value synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {any} The value returned by the processor.\n   */;\n\n  _proto.transformSync = function transformSync(rule, options) {\n    return this._runSync(rule, options).transform;\n  }\n  /**\n   * Process a selector into a new selector string asynchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {string} the selector after processing.\n   */;\n\n  _proto.process = function process(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.string || result.root.toString();\n    });\n  }\n  /**\n   * Process a selector into a new selector string synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {string} the selector after processing.\n   */;\n\n  _proto.processSync = function processSync(rule, options) {\n    var result = this._runSync(rule, options);\n    return result.string || result.root.toString();\n  };\n  return Processor;\n}();\nexports[\"default\"] = Processor;\nmodule.exports = exports.default;","map":{"version":3,"names":["exports","__esModule","_parser","_interopRequireDefault","require","obj","Processor","func","options","noop","funcRes","_proto","prototype","_shouldUpdateSelector","rule","merged","Object","assign","updateSelector","_isLossy","lossless","_root","parser","_parseOptions","root","lossy","_run","_this","Promise","resolve","reject","then","transform","string","undefined","toString","selector","e","_runSync","Error","ast","result","astSync","transformSync","process","processSync","module","default"],"sources":["D:/MyFile/Project/shop-via/node_modules/postcss-selector-parser/dist/processor.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _parser = _interopRequireDefault(require(\"./parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Processor = /*#__PURE__*/function () {\n  function Processor(func, options) {\n    this.func = func || function noop() {};\n\n    this.funcRes = null;\n    this.options = options;\n  }\n\n  var _proto = Processor.prototype;\n\n  _proto._shouldUpdateSelector = function _shouldUpdateSelector(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var merged = Object.assign({}, this.options, options);\n\n    if (merged.updateSelector === false) {\n      return false;\n    } else {\n      return typeof rule !== \"string\";\n    }\n  };\n\n  _proto._isLossy = function _isLossy(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var merged = Object.assign({}, this.options, options);\n\n    if (merged.lossless === false) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  _proto._root = function _root(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var parser = new _parser[\"default\"](rule, this._parseOptions(options));\n    return parser.root;\n  };\n\n  _proto._parseOptions = function _parseOptions(options) {\n    return {\n      lossy: this._isLossy(options)\n    };\n  };\n\n  _proto._run = function _run(rule, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        var root = _this._root(rule, options);\n\n        Promise.resolve(_this.func(root)).then(function (transform) {\n          var string = undefined;\n\n          if (_this._shouldUpdateSelector(rule, options)) {\n            string = root.toString();\n            rule.selector = string;\n          }\n\n          return {\n            transform: transform,\n            root: root,\n            string: string\n          };\n        }).then(resolve, reject);\n      } catch (e) {\n        reject(e);\n        return;\n      }\n    });\n  };\n\n  _proto._runSync = function _runSync(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var root = this._root(rule, options);\n\n    var transform = this.func(root);\n\n    if (transform && typeof transform.then === \"function\") {\n      throw new Error(\"Selector processor returned a promise to a synchronous call.\");\n    }\n\n    var string = undefined;\n\n    if (options.updateSelector && typeof rule !== \"string\") {\n      string = root.toString();\n      rule.selector = string;\n    }\n\n    return {\n      transform: transform,\n      root: root,\n      string: string\n    };\n  }\n  /**\n   * Process rule into a selector AST.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {Promise<parser.Root>} The AST of the selector after processing it.\n   */\n  ;\n\n  _proto.ast = function ast(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.root;\n    });\n  }\n  /**\n   * Process rule into a selector AST synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {parser.Root} The AST of the selector after processing it.\n   */\n  ;\n\n  _proto.astSync = function astSync(rule, options) {\n    return this._runSync(rule, options).root;\n  }\n  /**\n   * Process a selector into a transformed value asynchronously\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {Promise<any>} The value returned by the processor.\n   */\n  ;\n\n  _proto.transform = function transform(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.transform;\n    });\n  }\n  /**\n   * Process a selector into a transformed value synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {any} The value returned by the processor.\n   */\n  ;\n\n  _proto.transformSync = function transformSync(rule, options) {\n    return this._runSync(rule, options).transform;\n  }\n  /**\n   * Process a selector into a new selector string asynchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {string} the selector after processing.\n   */\n  ;\n\n  _proto.process = function process(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.string || result.root.toString();\n    });\n  }\n  /**\n   * Process a selector into a new selector string synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {string} the selector after processing.\n   */\n  ;\n\n  _proto.processSync = function processSync(rule, options) {\n    var result = this._runSync(rule, options);\n\n    return result.string || result.root.toString();\n  };\n\n  return Processor;\n}();\n\nexports[\"default\"] = Processor;\nmodule.exports = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}